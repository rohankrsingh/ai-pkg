name: Release (GitHub + AUR)

on:
  push:
    tags:
      - "v*"

env:
  PKG_NAME: ai-pkg-bin

jobs:
  build-and-aur:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system packages
        run: |
          pacman -Sy --noconfirm git base-devel python python-pip wget
          pip install --upgrade pip
          pip install build installer

      - name: Build wheel
        run: |
          python -m build

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute SHA256 of wheel
        env:
          TAG: ${{ github.ref_name }}
        run: |
          VERSION=${TAG#v}
          SHA256=$(sha256sum dist/ai-pkg-${VERSION}-py3-none-any.whl | cut -d ' ' -f1)
          echo "SHA256=$SHA256" >> $GITHUB_ENV

      - name: Prepare SSH for AUR
        run: |
          if [ -n "${{ secrets.AUR_SSH_KEY }}" ]; then
            mkdir -p ~/.ssh
            echo "${{ secrets.AUR_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          else
            echo "No AUR SSH key provided, skipping."
          fi

      - name: Clone or init AUR repo
        run: |
          if [ -n "${{ secrets.AUR_SSH_KEY }}" ]; then
            if git ls-remote ssh://aur@aur.archlinux.org/ai-pkg-bin.git; then
              git clone ssh://aur@aur.archlinux.org/ai-pkg-bin.git aur-repo
            else
              mkdir aur-repo
              cd aur-repo
              git init
              git remote add origin ssh://aur@aur.archlinux.org/ai-pkg-bin.git
              cd ..
            fi
          else
            echo "No AUR SSH key provided, skipping."
          fi

      - name: Update PKGBUILD and generate .SRCINFO
        env:
          TAG: ${{ github.ref_name }}
          SHA256: ${{ env.SHA256 }}
        run: |
          if [ -n "${{ secrets.AUR_SSH_KEY }}" ]; then
            VERSION=${TAG#v}
            cp PKGBUILD aur-repo/PKGBUILD
            sed -i "s|REPLACE_ME|$SHA256|" aur-repo/PKGBUILD
            cd aur-repo
            makepkg --printsrcinfo > .SRCINFO
            git add PKGBUILD .SRCINFO
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git commit -m "Update to ${TAG}" || echo "No changes to commit"
            git push origin master || git push origin main || true
          else
            echo "No AUR SSH key provided, skipping."
          fi
